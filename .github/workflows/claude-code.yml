name: Claude Code Assistant

on:
  issue_comment:
    types: [created]
  issues:
    types: [opened, edited]
  pull_request:
    types: [opened, edited]
  pull_request_review_comment:
    types: [created]

jobs:
  claude-code:
    if: contains(github.event.comment.body, '@claude') || contains(github.event.issue.body, '@claude') || contains(github.event.pull_request.body, '@claude')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Install Claude Code CLI
        run: |
          npm install -g @anthropic-ai/claude-code

      - name: Extract request from issue/comment
        id: extract-request
        run: |
          if [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            echo "request=${{ github.event.comment.body }}" >> $GITHUB_OUTPUT
            echo "issue_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "issues" ]]; then
            echo "request=${{ github.event.issue.body }}" >> $GITHUB_OUTPUT
            echo "issue_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
          fi

      - name: Run Claude Code
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Extrahiere die Aufgabe nach @claude
          REQUEST="${{ steps.extract-request.outputs.request }}"
          CLAUDE_REQUEST=$(echo "$REQUEST" | sed -n 's/.*@claude\s*\(.*\)/\1/p')
          
          if [ -n "$CLAUDE_REQUEST" ]; then
            echo "Processing Claude request: $CLAUDE_REQUEST"
            
            # F√ºhre Claude Code aus
            npx claude-code "$CLAUDE_REQUEST" --non-interactive
            
            # Committe √Ñnderungen falls vorhanden
            git config --local user.email "action@github.com"
            git config --local user.name "Claude Code Assistant"
            
            if ! git diff --quiet; then
              git add .
              git commit -m "ü§ñ Claude Code: $CLAUDE_REQUEST - Executed via GitHub Actions from issue #${{ steps.extract-request.outputs.issue_number }}"
              git push
              
              # Kommentiere auf das Issue
              gh issue comment ${{ steps.extract-request.outputs.issue_number }} --body "‚úÖ **Claude Code Ausf√ºhrung abgeschlossen** - √Ñnderungen wurden committet und gepusht. **Ausgef√ºhrte Aufgabe:** $CLAUDE_REQUEST - Die Implementierung findest du im neuesten Commit."
            else
              gh issue comment ${{ steps.extract-request.outputs.issue_number }} --body "‚ÑπÔ∏è **Claude Code Ausf√ºhrung abgeschlossen** - **Ausgef√ºhrte Aufgabe:** $CLAUDE_REQUEST - Keine Dateien wurden ge√§ndert."
            fi
          fi